<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="shortcut Icon0" href="%PUBLIC_URL%/favicon.ico">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="theme-color" content="#000000">
  <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css"
    integrity="sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4" crossOrigin="anonymous" />
  <link href="css/footballMain.css" rel="stylesheet">
  <script src="js/jquery.mobile.custom.js"></script>
  <script src="js/jquery.mobile.custom.min.js"></script>
  <script src="http://code.jquery.com/jquery.min.js"></script>
  <script src="http://code.jquery.com/ui/1.8.17/jquery-ui.min.js"></script>

  <style type="text/css">
    #myCanvas {
      background-size: 100% 100%;
      background-position: center;
    }
  </style>
</head>

<body onload="InitThis()">
  <script src="//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
  <div id="topButtons" style="text-align: center">
    <button id="backButton" type="button" onclick="window.location.href='/home'"><img src="img/backButton.png"
        height="25px" width="25px"></button>
    <select id="playbook" name="playbook">
      <option value="" selected disabled hidden>Choose Playbook</option>
      <option value="default">Default</option>
      <option value="playoff">Playoff</option>
    </select>
    <select id="play" name="play">
      <option value="" selected disabled hidden>Choose Play</option>
      <option value="default">Default</option>
      <option value="playoff">Basic Drill</option>
    </select>

    <script type="text/javascript">
      var $playbook = $('#playbook'),
        $play = $('#play'),
        $options = $play.find('option');

      $playbook.on('change', function () {
        $play.html($options.filter('[value="' + this.value + '"]'));
      }).trigger('change');
    </script>


    <button id="playButton" type="button" onclick="playWindow()"><img src="img/playButton.png" height="25px" width="25px"></button>
    <button id="saveButton" type="button" onclick="saveWindow()"><img src="img/saveButton.jpg" height="25px"
        width="25px"></button>
  </div>

  <div id="container" style="text-align:center" style="position: relative">
    <div id="field">
      <div align="center">
        <canvas id="myCanvas" width="440vw" height="800vh" style="border:2px solid black"></canvas>
        <br /><br />
        Color : <select id="selColor">
          <option value="black">black</option>
          <option value="blue">blue</option>
          <option value="red">red</option>
          <option value="green">green</option>
          <option value="yellow" selected="selected">yellow</option>
          <option value="gray">gray</option>
        </select>
      </div>
    </div>
  </div>
  <script type="text/javascript">
    var mousePressed = false;
    var lastX, lastY;
    var ctx;
    var user_index = 0;
    var play_index = 0;

    function spawnPlayers() {
      $.getJSON('user.json', function (data) {
        $.each(data.users, function (i, user) {
          if (user.logged == "true" && user.preferences[0].check == "checked") {
            user_index = i;
            $.each(user.plays, function (j, play) {
              if (play.selected == "true") {
                play_index = j;
                $.each(play.positions, function (k, position) {
                  $("#field").append('<div class="player" id="player' + k + '" onclick="dragElement(this)" ontouchstart="dragElementTouch(this)" style="position: absolute;z-index: 9; top: ' + position.top + '; left: ' + position.left + '"><img src="img/circle.png" style="width:25px; height:25px; background: ' + position.color + '; border-radius:12.5px"></div>');
                  dragElement(document.getElementById("player" + k));
                  dragElementTouch(document.getElementById("player" + k));
                });
              }
            });
          }
        });
      }).error(function () {
        console.log('error');
      });
    }

    function InitThis() {
      spawnPlayers();
      ctx = document.getElementById('myCanvas').getContext("2d");

      $('#myCanvas').mousedown(function (e) {
        //console.log("mouse Started drawing");
        mousePressed = true;
        Draw(e.pageX - $(this).offset().left, e.pageY - $(this).offset().top, false);
      });

      $('#myCanvas').mousemove(function (e) {
        //console.log("mouse Moving");
        if (mousePressed) {
          Draw(e.pageX - $(this).offset().left, e.pageY - $(this).offset().top, true);
        }
      });

      $('#myCanvas').mouseup(function (e) {
        if (mousePressed) {
          //console.log("mouse drawing ended");
          mousePressed = false;
          cPush();
        }
      });
      $('#myCanvas').mouseleave(function (e) {
        if (mousePressed) {
          //console.log("mouse left");
          mousePressed = false;
          cPush();
        }
      });

      $('#myCanvas').on('touchstart', function (e) {
        //console.log("Started drawing");
        mousePressed = true;
        Draw(e.originalEvent.changedTouches[0].pageX - $(this).offset().left, e.originalEvent.changedTouches[0].pageY - $(this).offset().top, false);
      });

      $('#myCanvas').on('touchmove', function (e) {
        //console.log("Moving fing");
        if (mousePressed) {
          Draw(e.originalEvent.changedTouches[0].pageX - $(this).offset().left, e.originalEvent.changedTouches[0].pageY - $(this).offset().top, true);
        }
      });

      $('#myCanvas').on('touchend', function (e) {
        //console.log("drawing ended");
        mousePressed = false;
      });
      $('#myCanvas').on('touchcancel', function (e) {
        mousePressed = false;
      });

      $.getJSON('user.json', function (data) {
        drawImage(data.users[user_index].plays[play_index].imgsrc);
      }).error(function () {
        console.log('error');
      });
    }

    function drawImage(imgsrc) {
      var image = new Image();
      console.log(imgsrc);
      image.src = imgsrc;
      $(image).load(function () {
        ctx.drawImage(image, 0, 0, 450, 800);
        cPush();
      });
    }

    function Draw(x, y, isDown) {
      if (isDown) {
        ctx.beginPath();
        ctx.strokeStyle = $('#selColor').val();
        ctx.lineWidth = $('#selWidth').val();
        ctx.lineJoin = "round";
        ctx.moveTo(lastX, lastY);
        ctx.lineTo(x, y);
        ctx.closePath();
        ctx.stroke();
      }
      lastX = x; lastY = y;
    }

    function clearArea() {
      // Use the identity matrix while clearing the canvas
      ctx.setTransform(1, 0, 0, 1, 0, 0);
      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);
    }

    var cPushArray = new Array();
    var cStep = -1;

    function cPush() {
      //console.log("Pushed");
      cStep++;
      if (cStep < cPushArray.length) { cPushArray.length = cStep; }
      cPushArray.push(document.getElementById('myCanvas').toDataURL());
      document.title = cStep + ":" + cPushArray.length;
    }

    function cUndo() {
      //console.log("Undo");
      if (cStep > 0) {
        cStep--;
        var canvasPic = new Image();
        canvasPic.src = cPushArray[cStep];
        canvasPic.onload = function () { ctx.drawImage(canvasPic, 0, 0); }
        document.title = cStep + ":" + cPushArray.length;
      }
    }

    function cRedo() {
      //console.log("redo");
      if (cStep < cPushArray.length - 1) {
        cStep++;
        var canvasPic = new Image();
        canvasPic.src = cPushArray[cStep];
        canvasPic.onload = function () { ctx.drawImage(canvasPic, 0, 0); }
        document.title = cStep + ":" + cPushArray.length;
      }
    }

    function dragElement(elmnt) {
      console.log("Able to now drag element " + elmnt.id);
      var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;
      if (document.getElementById(elmnt.id)) {
        /* if present, the header is where you move the DIV from:*/
        document.getElementById(elmnt.id).onmousedown = dragMouseDown;
      } else {
        /* otherwise, move the DIV from anywhere inside the DIV:*/
        elmnt.onmousedown = dragMouseDown;
      }

      function dragMouseDown(e) {
        console.log("Moving element " + elmnt.id);
        e = e || window.event;
        e.preventDefault();
        // get the mouse cursor position at startup:
        pos3 = e.clientX;
        pos4 = e.clientY;
        document.onmouseup = closeDragElement;
        // call a function whenever the cursor moves:
        document.onmousemove = elementDrag;
      }

      function elementDrag(e) {
        console.log("Dragging mouse")
        e = e || window.event;
        e.preventDefault();
        // calculate the new cursor position:
        pos1 = pos3 - e.clientX;
        pos2 = pos4 - e.clientY;
        pos3 = e.clientX;
        pos4 = e.clientY;
        // set the element's new position:
        elmnt.style.top = (elmnt.offsetTop - pos2) + "px";
        elmnt.style.left = (elmnt.offsetLeft - pos1) + "px";
      }

      function closeDragElement() {
        /* stop moving when mouse button is released:*/
                console.log("Element let go mouse");
        document.onmouseup = null;
        document.onmousemove = null;
      }
    }

    function dragElementTouch(elmnt) {
      console.log(elmnt.id + ", touch");
      var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;
      if (document.getElementById(elmnt.id)) {
        /* if present, the header is where you move the DIV from:*/
        document.getElementById(elmnt.id).ontouchstart = dragMouseDownTouch;
      } else {
        /* otherwise, move the DIV from anywhere inside the DIV:*/
        elmnt.ontouchstart = dragMouseDownTouch;
      }

      function dragMouseDownTouch(e) {
        console.log(elmnt.id + ", drag");
        e = e || window.event;
        e.preventDefault();
        // get the mouse cursor position at startup:
        pos3 = e.touches[0].clientX;
        pos4 = e.touches[0].clientY;
        document.ontouchend = closeDragElementTouch;
        // call a function whenever the cursor moves:
        document.ontouchmove = elementDragTouch;
      }

      function elementDragTouch(e) {
        console.log(elmnt.id + ", new");

        e = e || window.event;
        e.preventDefault();
        // calculate the new cursor position:
        pos1 = pos3 - e.touches[0].clientX;
        pos2 = pos4 - e.touches[0].clientY;
        pos3 = e.touches[0].clientX;
        pos4 = e.touches[0].clientY;
        // set the element's new position:
        //elmnt.style.top = (elmnt.offsetTop - pos2 + "px";
        //elmnt.style.left = (elmnt.offsetLeft - pos1) + "px";
        elmnt.style.top = (e.touches[0].clientY-12.5) + "px";
        elmnt.style.left = (e.touches[0].clientX-12.5) + "px";
        if (elmnt.style.top > window.innerHeight) {
          elmnt.style.top = window.innerHeight;
        }
        if (elmnt.style.left > window.innerWidth) {
          elmnt.style.left = window.innerWidth;
        }
        if (elmnt.style.top < 0) {
          elmnt.style.top = 0;
        }
        if (elmnt.style.left < 0) {
          elmnt.style.top = 0;
        }
      }

      function closeDragElementTouch() {
        /* stop moving when mouse button is released:*/
        console.log("Element let go touch");
        document.touchend = null;
        document.ontouchmove = null;
        document.ontouchstart = null;
      }
    }
  </script>

  <div id="bottomButtons" style="text-align: center">
    <button id="eraseButton" type="button" onclick="eraserWindow()"><img src="img/eraserButton.png" height="25px" width="25px"></button>
    <button id="upButton" type="button" onclick="openUp()"><img src="img/upArrow.png" height="25px"
        width="25px"></button>
    <button id="redoButton" onclick="cRedo()" type="button"><img src="img/redoButton.png" height="25px"
        width="25px"></button>
    <button id="undoButton" onclick="cUndo()" type="button"><img src="img/undoButton.png" height="25px"
        width="25px"></button>
  </div>
  <div id="collapsible">
    <a href="javascript:void(0)" class="closebtn" onclick="closeUp()">&times;</a>
    <button id="drawButton" type="button" value="on" onclick="drawWindow()"><img src="img/pencil.jpg" height="25px" width="25px">
  </div>
  <script>
    function drawOn() {
      if (document.getElementById("drawButton").value == "on") {
        document.collapsible.drawButton.value = "off";

      }
      if (document.getElementById("drawButton").value == "off") {
        document.collapsible.drawButton.value = "on";
      }
    }
  </script>

  <script>
    function saveWindow() {
      confirm("Do you wish to save?");
    }
  </script>
  <script>
    function eraserWindow() {
      confirm("Placeholder for eraser functionality");
    }
  </script>
  <script>
    function playWindow() {
      confirm("Placeholder for play button functionality");
    }
  </script>
  <script>
    function drawWindow() {
      confirm("Placeholder for draw button use");
    }
  </script>
  <script>
    function openUp() {
      document.getElementById("collapsible").style.display = "block";
    }

    function closeUp() {
      document.getElementById("collapsible").style.display = "none";
    }
  </script>
</body>

</html>